geom_boxplot()+
xlab(varies)+
ylab(quote(hat(beta)[1]))+
geom_hline(yintercept=0.5,lty=1,col="orange")+
ggtitle(titlename)
beta0_1
beta0_2 = ggplot(boxplot_beta0,aes(x=Q,y= beta0.2,fill=Estimator))+
geom_boxplot()+
xlab(varies)+
ylab(quote(hat(beta)[2]))+
geom_hline(yintercept=-0.5,lty=1,col="orange")+
ggtitle(titlename)
beta0_2
######################## ####################
##############     Q fixed and m varies            ######
### boxplots
setwd("C:/Users/fchezeut/Documents/GitHub/Cox_matched_data/code_Q_connu")
source("7_scenarios.R")
scenarios_boxplot=scenarios[scenarios$Prob_1==0.6,]
#scenarios_boxplot=scenarios[scenarios$Prob_1==0.7,]
#scenarios_boxplot=scenarios[scenarios$Prob_1==0.8,]
varies="m"
fixed = "Prob_1"
library(ggplot2)
library(gridExtra)
boxplot_beta0 = NULL
# size fix
for (i in (1:nrow(scenarios_boxplot ))){
nsim = scenarios_boxplot[i,1]
m = scenarios_boxplot[i,2]
n = scenarios_boxplot[i,3]
Prob1 = scenarios_boxplot[i,4]
Prob2 = scenarios_boxplot[i,5]
Prob3 = scenarios_boxplot[i,6]
Prob_sample = paste0("(",Prob1,",",Prob2,",",Prob3,")")
load(paste0("C:/Users/fchezeut/Documents/GitHub/Cox_matched_data/code_Q_connu/Results/",
"nsim=",nsim,"_m=",m, "_prob1=", Prob1, ".Rdata"))
results_sample = results_sample
boxplot_beta0_true = cbind(rep(1,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_true_s1,
results_sample$coef_true_s2)
boxplot_beta0_naive = cbind(rep(2,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_naive_s1,
results_sample$coef_naive_s2)
boxplot_beta0_w_sum1 = cbind(rep(3,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_w_sum1_s1,
results_sample$coef_w_sum1_s2)
boxplot_beta0_w_sum2 = cbind(rep(4,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_w_sum2_s1,
results_sample$coef_w_sum2_s2)
boxplot_beta0_estimate = cbind(rep(5,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_estimate_s1,
results_sample$coef_estimate_s2)
boxplot_beta0_estimate_Nd = cbind(rep(6,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_estimate_s_Nd1,
results_sample$coef_estimate_s_Nd2)
boxplot_beta0 = rbind(boxplot_beta0,boxplot_beta0_true,boxplot_beta0_naive,boxplot_beta0_w_sum1,
boxplot_beta0_w_sum2,boxplot_beta0_estimate,boxplot_beta0_estimate_Nd  )
}
titlename = paste0( "Q=", "(",unique(scenarios_boxplot[,4]), ",",
unique(scenarios_boxplot[,5]), ",",unique(scenarios_boxplot[,6]), ")" )
colnames(boxplot_beta0) = c("Estimator",varies,fixed,  "beta0.1","beta0.2")
boxplot_beta0 = data.frame(boxplot_beta0)
boxplot_beta0[,1] = factor(boxplot_beta0[,1],
levels = 1:6, labels = c("True"," Naive", "w_sum1", "w_sum2", "EM", "EM_Nd"))
boxplot_beta0[,4] = as.numeric(boxplot_beta0[,4] )
boxplot_beta0[,5] = as.numeric(boxplot_beta0[,5] )
# Boxplots for beta0
beta0_1 = ggplot(boxplot_beta0,aes(x=m,y= beta0.1,fill=Estimator))+
geom_boxplot()+
xlab(varies)+
ylab(quote(hat(beta)[1]))+
geom_hline(yintercept=0.5,lty=1,col="orange")+
ggtitle(titlename)
beta0_1
beta0_2 = ggplot(boxplot_beta0,aes(x=m,y= beta0.2,fill=Estimator))+
geom_boxplot()+
xlab(varies)+
ylab(quote(hat(beta)[2]))+
geom_hline(yintercept=-0.5,lty=1,col="orange")+
ggtitle(titlename)
beta0_2
#####################################
library(survival)
library(rootSolve)
library(nleqslv)
setwd("C:/Users/fchezeut/Documents/GitHub/Cox_matched_data/code_Q_connu")
source("1_data_generate.R")
source("2_risk_function.R")
source("3_naive_method.R")
source("4_method_w_sum1.R")
source("5_method_w_sum2.R")
source("6_method_EM.R")
source("EM_with_N_d.R")
source("7_scenarios.R")
################### nsim monte carlos
estimates_survival<- function(nsim,n,m,C,p,beta,Q,lambda0,beta0){
coef_true_s = matrix(0,nrow = nsim, ncol = p)
coef_naive_s = matrix(0,nrow = nsim, ncol = p)
converge_naive = vector()
coef_w_sum1_s = matrix(0,nrow = nsim, ncol = p)
converge_w_sum1 = vector()
coef_w_sum2_s = matrix(0,nrow = nsim, ncol = p)
converge_w_sum2 = vector()
coef_estimate_s = matrix(0,nrow = nsim, ncol = p)
converge_estimate = vector()
coef_estimate_s_Nd = matrix(0,nrow = nsim, ncol = p)
converge_estimate_Nd = vector()
for (i in 1:nsim){
#data generation
surv_data = Generate_data(m,n,beta)
mf = Matrix_function(n,m,C,beta,surv_data)
data_true = mf$data_true
data_naive = mf$data_naive
Ts = mf$data_true$Time
event = mf$data_true$delta
Q = mf$Q
XB = mf$XB
Z = as.matrix(data_naive[,3:(p+2)])
lambda0 =  rep(0.1,length(event))
L = which(event == 0)
lambda0 [L] = 0
beta0 = c(0.1,0.1)
# Theoretical estimating equation for true and naive data
fit_true = coxph(Surv(Time,delta)~.,data = data_true)
coef_true_s[i,] = as.vector(fit_true$coefficients)
# naive method
fit_naive = coxph_equa_naive(Ts,event, Z, maxiter = 20)
coef_naive_s[i,] = fit_naive$coef
converge_naive[i] = fit_naive$converge
# method with weighted average
fit_w_sum1 = coxph_w_sum1(Ts,event,XB, Q,maxiter = 20)
coef_w_sum1_s[i,] = fit_w_sum1$coef
converge_w_sum1[i] = fit_w_sum1$converge
#method with the maximum of proba
fit_w_sum2 = coxph_w_sum2(Ts,event,XB, Q, maxiter = 20)
coef_w_sum2_s[i,] = fit_w_sum2$coef
converge_w_sum2[i] = fit_w_sum2$converge
# EM method
fit_estimate = Func_itteration(beta0,lambda0,Ts,event,XB, Q,tol= 1e-6,maxits = 500)
coef_estimate_s[i,] = fit_estimate$beta0
converge_estimate[i] = as.numeric(fit_estimate$converge)
# EM with N_d
fit_estimate_Nd = Func_itteration_Nd(beta0,lambda0,Ts,event,XB, Q,tol= 1e-6,maxits = 500)
coef_estimate_s_Nd[i,] = fit_estimate_Nd$beta0
converge_estimate_Nd[i] = as.numeric(fit_estimate_Nd$converge)
}
return(list( coef_true_s1 = coef_true_s[,1], coef_true_s2 = coef_true_s[,2],
coef_naive_s1 = coef_naive_s[,1], coef_naive_s2 = coef_naive_s[,2], coef_w_sum1_s1 = coef_w_sum1_s[,1],
coef_w_sum1_s2 = coef_w_sum1_s[,2], coef_w_sum2_s1 = coef_w_sum2_s[,1], coef_w_sum2_s2 = coef_w_sum2_s[,2],
coef_estimate_s1 = coef_estimate_s[,1], coef_estimate_s2 = coef_estimate_s[,2],
coef_estimate_s_Nd1 = coef_estimate_s_Nd[,1], coef_estimate_s_Nd2 = coef_estimate_s_Nd[,2],converge_naive = converge_naive,
converge_w_sum1= converge_w_sum1,converge_w_sum2 = converge_w_sum2, converge_estimate = converge_estimate,
converge_estimate_Nd = converge_estimate_Nd ))  }
######################################
setwd("C:/Users/fchezeut/Documents/GitHub/Cox_matched_data/code_Q_connu")
for (i in (1:nrow(scenarios))){
nsim=scenarios[i,1]
m=scenarios[i,2]
n=scenarios[i,3]
C=vector()
C[1]=scenarios[i,4]
C[2]=scenarios[i,5]
C[3]=scenarios[i,6]
lambda0 = rep(0.1,n)
beta0 = c(0.1,0.1)
results_sample = estimates_survival(nsim,n,m,C,p,beta,Q,lambda0,beta0) #monte carlos
filename = paste0("C:/Users/fchezeut/Documents/GitHub/Cox_matched_data/code_Q_connu/Results/","nsim=",nsim,
"_m=",m, "_prob1=", C[1], ".Rdata")
save(results_sample,file = filename)
}
######################## ####################
##############     m fixed and Q varies            ######
### boxplots
setwd("C:/Users/fchezeut/Documents/GitHub/Cox_matched_data/code_Q_connu")
source("7_scenarios.R")
#scenarios_boxplot=scenarios[scenarios$m==100,]
#scenarios_boxplot=scenarios[scenarios$m==500,]
scenarios_boxplot=scenarios[scenarios$m==700,]
varies = "Q"
fixed = "m"
library(ggplot2)
library(gridExtra)
library(xtable)
boxplot_beta0 = NULL
# size fix
for (i in (1:nrow(scenarios_boxplot ))){
nsim = scenarios_boxplot[i,1]
m = scenarios_boxplot[i,2]
n = scenarios_boxplot[i,3]
Prob1 = scenarios_boxplot[i,4]
Prob2 = scenarios_boxplot[i,5]
Prob3 = scenarios_boxplot[i,6]
Prob_sample = paste0("(",Prob1,",",Prob2,",",Prob3,")")
load(paste0("C:/Users/fchezeut/Documents/GitHub/Cox_matched_data/code_Q_connu/Results/",
"nsim=",nsim,"_m=",m, "_prob1=", Prob1, ".Rdata"))
results_sample = results_sample
boxplot_beta0_true = cbind(rep(1,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_true_s1,
results_sample$coef_true_s2)
boxplot_beta0_naive = cbind(rep(2,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_naive_s1,
results_sample$coef_naive_s2)
boxplot_beta0_w_sum1 = cbind(rep(3,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_w_sum1_s1,
results_sample$coef_w_sum1_s2)
boxplot_beta0_w_sum2 = cbind(rep(4,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_w_sum2_s1,
results_sample$coef_w_sum2_s2)
boxplot_beta0_estimate = cbind(rep(5,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_estimate_s1,
results_sample$coef_estimate_s2)
boxplot_beta0_estimate_Nd = cbind(rep(6,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_estimate_s_Nd1,
results_sample$coef_estimate_s_Nd2)
boxplot_beta0 = rbind(boxplot_beta0,boxplot_beta0_true,boxplot_beta0_naive,boxplot_beta0_w_sum1,
boxplot_beta0_w_sum2,boxplot_beta0_estimate,boxplot_beta0_estimate_Nd  )
}
titlename = paste0("m=",unique(scenarios_boxplot[,2]),
", ","n=",unique(scenarios_boxplot[,3]))
colnames(boxplot_beta0) = c("Estimator",fixed, varies, "beta0.1","beta0.2")
boxplot_beta0 = data.frame(boxplot_beta0)
boxplot_beta0[,1] = factor(boxplot_beta0[,1],
levels = 1:6, labels = c("True"," Naive", "w_sum1", "w_sum2", "EM","EM_Nd"))
boxplot_beta0[,4] = as.numeric(boxplot_beta0[,4] )
boxplot_beta0[,5] = as.numeric(boxplot_beta0[,5] )
# Boxplots for beta0
beta0_1 = ggplot(boxplot_beta0,aes(x=Q,y= beta0.1,fill=Estimator))+
geom_boxplot()+
xlab(varies)+
ylab(quote(hat(beta)[1]))+
geom_hline(yintercept=0.5,lty=1,col="orange")+
ggtitle(titlename)
beta0_1
beta0_2 = ggplot(boxplot_beta0,aes(x=Q,y= beta0.2,fill=Estimator))+
geom_boxplot()+
xlab(varies)+
ylab(quote(hat(beta)[2]))+
geom_hline(yintercept=-0.5,lty=1,col="orange")+
ggtitle(titlename)
beta0_2
######################## ####################
##############     Q fixed and m varies            ######
### boxplots
setwd("C:/Users/fchezeut/Documents/GitHub/Cox_matched_data/code_Q_connu")
source("7_scenarios.R")
scenarios_boxplot=scenarios[scenarios$Prob_1==0.6,]
#scenarios_boxplot=scenarios[scenarios$Prob_1==0.7,]
#scenarios_boxplot=scenarios[scenarios$Prob_1==0.8,]
varies="m"
fixed = "Prob_1"
library(ggplot2)
library(gridExtra)
boxplot_beta0 = NULL
# size fix
for (i in (1:nrow(scenarios_boxplot ))){
nsim = scenarios_boxplot[i,1]
m = scenarios_boxplot[i,2]
n = scenarios_boxplot[i,3]
Prob1 = scenarios_boxplot[i,4]
Prob2 = scenarios_boxplot[i,5]
Prob3 = scenarios_boxplot[i,6]
Prob_sample = paste0("(",Prob1,",",Prob2,",",Prob3,")")
load(paste0("C:/Users/fchezeut/Documents/GitHub/Cox_matched_data/code_Q_connu/Results/",
"nsim=",nsim,"_m=",m, "_prob1=", Prob1, ".Rdata"))
results_sample = results_sample
boxplot_beta0_true = cbind(rep(1,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_true_s1,
results_sample$coef_true_s2)
boxplot_beta0_naive = cbind(rep(2,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_naive_s1,
results_sample$coef_naive_s2)
boxplot_beta0_w_sum1 = cbind(rep(3,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_w_sum1_s1,
results_sample$coef_w_sum1_s2)
boxplot_beta0_w_sum2 = cbind(rep(4,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_w_sum2_s1,
results_sample$coef_w_sum2_s2)
boxplot_beta0_estimate = cbind(rep(5,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_estimate_s1,
results_sample$coef_estimate_s2)
boxplot_beta0_estimate_Nd = cbind(rep(6,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_estimate_s_Nd1,
results_sample$coef_estimate_s_Nd2)
boxplot_beta0 = rbind(boxplot_beta0,boxplot_beta0_true,boxplot_beta0_naive,boxplot_beta0_w_sum1,
boxplot_beta0_w_sum2,boxplot_beta0_estimate,boxplot_beta0_estimate_Nd  )
}
titlename = paste0( "Q=", "(",unique(scenarios_boxplot[,4]), ",",
unique(scenarios_boxplot[,5]), ",",unique(scenarios_boxplot[,6]), ")" )
colnames(boxplot_beta0) = c("Estimator",varies,fixed,  "beta0.1","beta0.2")
boxplot_beta0 = data.frame(boxplot_beta0)
boxplot_beta0[,1] = factor(boxplot_beta0[,1],
levels = 1:6, labels = c("True"," Naive", "w_sum1", "w_sum2", "EM", "EM_Nd"))
boxplot_beta0[,4] = as.numeric(boxplot_beta0[,4] )
boxplot_beta0[,5] = as.numeric(boxplot_beta0[,5] )
# Boxplots for beta0
beta0_1 = ggplot(boxplot_beta0,aes(x=m,y= beta0.1,fill=Estimator))+
geom_boxplot()+
xlab(varies)+
ylab(quote(hat(beta)[1]))+
geom_hline(yintercept=0.5,lty=1,col="orange")+
ggtitle(titlename)
beta0_1
beta0_2 = ggplot(boxplot_beta0,aes(x=m,y= beta0.2,fill=Estimator))+
geom_boxplot()+
xlab(varies)+
ylab(quote(hat(beta)[2]))+
geom_hline(yintercept=-0.5,lty=1,col="orange")+
ggtitle(titlename)
beta0_2
#####################################
sum(2)
######################## ####################
##############     m fixed and Q varies            ######
### boxplots
setwd("C:/Users/fchezeut/Documents/GitHub/Cox_matched_data/code_Q_connu")
source("7_scenarios.R")
#scenarios_boxplot=scenarios[scenarios$m==100,]
scenarios_boxplot=scenarios[scenarios$m==500,]
#scenarios_boxplot=scenarios[scenarios$m==700,]
varies = "Q"
fixed = "m"
library(ggplot2)
library(gridExtra)
library(xtable)
boxplot_beta0 = NULL
# size fix
for (i in (1:nrow(scenarios_boxplot ))){
nsim = scenarios_boxplot[i,1]
m = scenarios_boxplot[i,2]
n = scenarios_boxplot[i,3]
Prob1 = scenarios_boxplot[i,4]
Prob2 = scenarios_boxplot[i,5]
Prob3 = scenarios_boxplot[i,6]
Prob_sample = paste0("(",Prob1,",",Prob2,",",Prob3,")")
load(paste0("C:/Users/fchezeut/Documents/GitHub/Cox_matched_data/code_Q_connu/Results/",
"nsim=",nsim,"_m=",m, "_prob1=", Prob1, ".Rdata"))
results_sample = results_sample
boxplot_beta0_true = cbind(rep(1,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_true_s1,
results_sample$coef_true_s2)
boxplot_beta0_naive = cbind(rep(2,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_naive_s1,
results_sample$coef_naive_s2)
boxplot_beta0_w_sum1 = cbind(rep(3,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_w_sum1_s1,
results_sample$coef_w_sum1_s2)
boxplot_beta0_w_sum2 = cbind(rep(4,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_w_sum2_s1,
results_sample$coef_w_sum2_s2)
boxplot_beta0_estimate = cbind(rep(5,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_estimate_s1,
results_sample$coef_estimate_s2)
boxplot_beta0_estimate_Nd = cbind(rep(6,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_estimate_s_Nd1,
results_sample$coef_estimate_s_Nd2)
boxplot_beta0 = rbind(boxplot_beta0,boxplot_beta0_true,boxplot_beta0_naive,boxplot_beta0_w_sum1,
boxplot_beta0_w_sum2,boxplot_beta0_estimate,boxplot_beta0_estimate_Nd  )
}
titlename = paste0("m=",unique(scenarios_boxplot[,2]),
", ","n=",unique(scenarios_boxplot[,3]))
colnames(boxplot_beta0) = c("Estimator",fixed, varies, "beta0.1","beta0.2")
boxplot_beta0 = data.frame(boxplot_beta0)
boxplot_beta0[,1] = factor(boxplot_beta0[,1],
levels = 1:6, labels = c("True"," Naive", "w_sum1", "w_sum2", "EM","EM_Nd"))
boxplot_beta0[,4] = as.numeric(boxplot_beta0[,4] )
boxplot_beta0[,5] = as.numeric(boxplot_beta0[,5] )
# Boxplots for beta0
beta0_1 = ggplot(boxplot_beta0,aes(x=Q,y= beta0.1,fill=Estimator))+
geom_boxplot()+
xlab(varies)+
ylab(quote(hat(beta)[1]))+
geom_hline(yintercept=0.5,lty=1,col="orange")+
ggtitle(titlename)
beta0_1
beta0_2 = ggplot(boxplot_beta0,aes(x=Q,y= beta0.2,fill=Estimator))+
geom_boxplot()+
xlab(varies)+
ylab(quote(hat(beta)[2]))+
geom_hline(yintercept=-0.5,lty=1,col="orange")+
ggtitle(titlename)
beta0_2
######################## ####################
##############     Q fixed and m varies            ######
### boxplots
setwd("C:/Users/fchezeut/Documents/GitHub/Cox_matched_data/code_Q_connu")
source("7_scenarios.R")
#scenarios_boxplot=scenarios[scenarios$Prob_1==0.6,]
#scenarios_boxplot=scenarios[scenarios$Prob_1==0.7,]
scenarios_boxplot=scenarios[scenarios$Prob_1==0.8,]
varies="m"
fixed = "Prob_1"
library(ggplot2)
library(gridExtra)
boxplot_beta0 = NULL
# size fix
for (i in (1:nrow(scenarios_boxplot ))){
nsim = scenarios_boxplot[i,1]
m = scenarios_boxplot[i,2]
n = scenarios_boxplot[i,3]
Prob1 = scenarios_boxplot[i,4]
Prob2 = scenarios_boxplot[i,5]
Prob3 = scenarios_boxplot[i,6]
Prob_sample = paste0("(",Prob1,",",Prob2,",",Prob3,")")
load(paste0("C:/Users/fchezeut/Documents/GitHub/Cox_matched_data/code_Q_connu/Results/",
"nsim=",nsim,"_m=",m, "_prob1=", Prob1, ".Rdata"))
results_sample = results_sample
boxplot_beta0_true = cbind(rep(1,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_true_s1,
results_sample$coef_true_s2)
boxplot_beta0_naive = cbind(rep(2,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_naive_s1,
results_sample$coef_naive_s2)
boxplot_beta0_w_sum1 = cbind(rep(3,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_w_sum1_s1,
results_sample$coef_w_sum1_s2)
boxplot_beta0_w_sum2 = cbind(rep(4,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_w_sum2_s1,
results_sample$coef_w_sum2_s2)
boxplot_beta0_estimate = cbind(rep(5,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_estimate_s1,
results_sample$coef_estimate_s2)
boxplot_beta0_estimate_Nd = cbind(rep(6,times=nsim),
rep(m,times=nsim),
rep(  Prob_sample , times=nsim ),
results_sample$coef_estimate_s_Nd1,
results_sample$coef_estimate_s_Nd2)
boxplot_beta0 = rbind(boxplot_beta0,boxplot_beta0_true,boxplot_beta0_naive,boxplot_beta0_w_sum1,
boxplot_beta0_w_sum2,boxplot_beta0_estimate,boxplot_beta0_estimate_Nd  )
}
titlename = paste0( "Q=", "(",unique(scenarios_boxplot[,4]), ",",
unique(scenarios_boxplot[,5]), ",",unique(scenarios_boxplot[,6]), ")" )
colnames(boxplot_beta0) = c("Estimator",varies,fixed,  "beta0.1","beta0.2")
boxplot_beta0 = data.frame(boxplot_beta0)
boxplot_beta0[,1] = factor(boxplot_beta0[,1],
levels = 1:6, labels = c("True"," Naive", "w_sum1", "w_sum2", "EM", "EM_Nd"))
boxplot_beta0[,4] = as.numeric(boxplot_beta0[,4] )
boxplot_beta0[,5] = as.numeric(boxplot_beta0[,5] )
# Boxplots for beta0
beta0_1 = ggplot(boxplot_beta0,aes(x=m,y= beta0.1,fill=Estimator))+
geom_boxplot()+
xlab(varies)+
ylab(quote(hat(beta)[1]))+
geom_hline(yintercept=0.5,lty=1,col="orange")+
ggtitle(titlename)
beta0_1
beta0_2 = ggplot(boxplot_beta0,aes(x=m,y= beta0.2,fill=Estimator))+
geom_boxplot()+
xlab(varies)+
ylab(quote(hat(beta)[2]))+
geom_hline(yintercept=-0.5,lty=1,col="orange")+
ggtitle(titlename)
beta0_2
#####################################
