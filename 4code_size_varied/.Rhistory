setwd("C:/Users/fchezeut/Documents/GitHub/Cox-matched-data/code_size_varied")
source("7_EM_scenarios.R")
#scenarios_boxplot=scenarios[scenarios$nB==100,]
#scenarios_boxplot=scenarios[scenarios$nB==500,]
scenarios_boxplot=scenarios[scenarios$nB==2000,]
scenarios_boxplot
#scenarios_boxplot=scenarios[scenarios$nB==2000,]
#scenarios_boxplot=scenarios[scenarios$nB==4000,]
scenarios_boxplot=scenarios[scenarios$nB==6000,]
scenarios_boxplot
varies = "K"
fixed="nB"
library(ggplot2)
library(gridExtra)
library(xtable)
boxplot_beta0 = NULL
scenarios
varies
# size fix
for (i in (1:nrow(scenarios_boxplot))){
nsim = scenarios_boxplot[i,1]
K = scenarios_boxplot[i,2]
nA = scenarios_boxplot[i,3]
nB= scenarios_boxplot[i,4]
load(paste0("C:/Users/fchezeut/Documents/GitHub/Cox-matched-data/code_size_varied/Results/",
"nsim=",nsim,"_nB=",nB,"_nA=",nA,"_K=",K, ".Rdata"))
results_sample = results_sample
boxplot_beta0_true = cbind(rep(1,times=nsim),
rep(K,times=nsim),
rep(nB, times=nsim),
results_sample$coef_true_s1,
results_sample$coef_true_s2,
results_sample$coef_true_s3)
boxplot_beta0_naive = cbind(rep(2,times=nsim),
rep(K,times=nsim),
rep(nB, times=nsim),
results_sample$coef_naive_s1,
results_sample$coef_naive_s2,
results_sample$coef_naive_s3)
boxplot_beta0_w_sum1 = cbind(rep(3,times=nsim),
rep(K,times=nsim),
rep(nB,times=nsim),
results_sample$coef_w_sum1_s1,
results_sample$coef_w_sum1_s2,
results_sample$coef_w_sum1_s3)
boxplot_beta0_w_sum2 = cbind(rep(4,times=nsim),
rep(K,times=nsim),
rep(nB,times=nsim),
results_sample$coef_w_sum2_s1,
results_sample$coef_w_sum2_s2,
results_sample$coef_w_sum2_s3)
boxplot_beta0_estimate = cbind(rep(5,times=nsim),
rep(K,times=nsim),
rep(nB, times=nsim),
results_sample$coef_estimate_s1,
results_sample$coef_estimate_s2,
results_sample$coef_estimate_s3)
boxplot_beta0 = rbind(boxplot_beta0,boxplot_beta0_true,boxplot_beta0_naive,
boxplot_beta0_w_sum1,  boxplot_beta0_w_sum2,boxplot_beta0_estimate  )
}
scenarios
boxplot_beta0 = NULL
# size fix
for (i in (1:nrow(scenarios_boxplot))){
nsim = scenarios_boxplot[i,1]
nB = scenarios_boxplot[i,2]
nA = scenarios_boxplot[i,3]
K= scenarios_boxplot[i,4]
load(paste0("C:/Users/fchezeut/Documents/GitHub/Cox-matched-data/code_size_varied/Results/",
"nsim=",nsim,"_nB=",nB,"_nA=",nA,"_K=",K,".Rdata"))
results_sample = results_sample
boxplot_beta0_true = cbind(rep(1,times=nsim),
rep(K,times=nsim),
rep(nB, times=nsim),
results_sample$coef_true_s1,
results_sample$coef_true_s2,
results_sample$coef_true_s3)
boxplot_beta0_naive = cbind(rep(2,times=nsim),
rep(K,times=nsim),
rep(nB, times=nsim),
results_sample$coef_naive_s1,
results_sample$coef_naive_s2,
results_sample$coef_naive_s3)
boxplot_beta0_w_sum1 = cbind(rep(3,times=nsim),
rep(K,times=nsim),
rep(nB,times=nsim),
results_sample$coef_w_sum1_s1,
results_sample$coef_w_sum1_s2,
results_sample$coef_w_sum1_s3)
boxplot_beta0_w_sum2 = cbind(rep(4,times=nsim),
rep(K,times=nsim),
rep(nB,times=nsim),
results_sample$coef_w_sum2_s1,
results_sample$coef_w_sum2_s2,
results_sample$coef_w_sum2_s3)
boxplot_beta0_estimate = cbind(rep(5,times=nsim),
rep(K,times=nsim),
rep(nB, times=nsim),
results_sample$coef_estimate_s1,
results_sample$coef_estimate_s2,
results_sample$coef_estimate_s3)
boxplot_beta0 = rbind(boxplot_beta0,boxplot_beta0_true,boxplot_beta0_naive,
boxplot_beta0_w_sum1,  boxplot_beta0_w_sum2,boxplot_beta0_estimate  )
}
colnames(boxplot_beta0) = c("Estimator", varies, fixed,"beta0.1","beta0.2","beta0.3")
boxplot_beta0 = data.frame(boxplot_beta0)
View(boxplot_beta0)
boxplot_beta0[,1] = factor(boxplot_beta0[,1],
levels = 1:5, labels = c("Theorical"," Naive", "weighted average", "2-max weighted average", "EM"))
boxplot_beta0[,2] = as.factor(boxplot_beta0[,2] )
boxplot_beta0[,3] = as.factor(boxplot_beta0[,3] )
boxplot_beta0[,4] = as.numeric(boxplot_beta0[,4] )
boxplot_beta0[,5] = as.numeric(boxplot_beta0[,5] )
boxplot_beta0[,6] = as.numeric(boxplot_beta0[,6] )
beta0_1 = ggplot(boxplot_beta0,aes(x=K,y= beta0.1,fill=Estimator))+
geom_boxplot()+
xlab(varies)+
ylab(quote(hat(beta)[1]))+
geom_hline(yintercept=beta[1],lty=1,col="orange")
beta0_1
setwd("C:/Users/fchezeut/Documents/GitHub/Cox-matched-data/code_size_varied")
#source("5_EM_scenarios.R")
source("7_EM_scenarios.R")
#scenarios_boxplot=scenarios[scenarios$K==9,]
scenarios_boxplot=scenarios[scenarios$K==18,]
scenarios_boxplot
nB_sample[2]
K_sample
addition= rbind(c(nsin,nB_sample[2], nA, K_sample[1,2]),
c(nsin,nB_sample[3], nA, K_sample[1,2]))
addition= rbind(c(nsim,nB_sample[2], nA, K_sample[1,2]),
c(nsim,nB_sample[3], nA, K_sample[1,2]))
addition
scenarios= rbind(scenarios,addition)
############### SCENARIOS
R=c(2,4,6)
nA = 1000 # make sure we have nA >= 100
nB_sample = c(R[1]*nA ,R[2]*nA ,R[3]*nA )
p = 3
nsim =5
beta = c(0.5,-0.5,1)
K_min= c(22,24,25)
#K_min= round(log(nB_sample)/log(2)) # min value of K for which we have a unique identification
#K_sample=  t(matrix(rep(c(9,18,27), p), ncol=3))# MULTIPLE OF 3, vary K
K_sample = cbind((K_min-8),(K_min-4),(K_min) )# make sure we have (K_min-5) >= 2
#prevalence_sample = c(0.05,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8)
prevalence_sample = 0.5 # probability of bernoulli
############## Table of scenarios
scenarios = NULL
for (k in 1:length(nB_sample)) {
nB =  nB_sample[k]
for (i in 1:nrow(K_sample)){
K= K_sample[k,i]
scenarios = rbind(scenarios,c(nsim,nB,nA,K))
}
}
addition= rbind(c(nsim,nB_sample[2], nA, K_sample[1,2]),
c(nsim,nB_sample[3], nA, K_sample[1,2]))
scenarios= rbind(scenarios,addition)
colnames(scenarios) = c("nsim","nB","nA","K")
scenarios=data.frame(scenarios)
scenarios
library(survival)
library(rootSolve)
library(nleqslv)
setwd("C:/Users/fchezeut/Documents/GitHub/Cox-matched-data/code_size_varied")
source("2_0_data_generate.R")
source("2_0_matrice_Q.R")
source("2_EM_risk_function.R")
source("3_naive_method.R")
source("4_method_w_sum1.R")
source("5_method_w_sum2.R")
source("6_EM_method_EM.R")
source("7_EM_scenarios.R")
################### nsim monte carlos
estimates_survival<- function(nsim,nA,nB,p,beta,K,prevalence){
coef_true_s = matrix(0,nrow = nsim, ncol = p)
coef_naive_s = matrix(0,nrow = nsim, ncol = p)
converge_naive = vector()
coef_w_sum1_s = matrix(0,nrow = nsim, ncol = p)
converge_w_sum1 = vector()
coef_w_sum2_s = matrix(0,nrow = nsim, ncol = p)
converge_w_sum2 = vector()
coef_estimate_s = matrix(0,nrow = nsim, ncol = p)
converge_estimate = vector()
for (i in 1:nsim){
#data generation
mf = Generate_data(K,nA,nB,prevalence,min_prev = 0.01)
surv_data = mf$surv_data
XB = mf$XB
data_true=surv_data
idBA=mf$idBA
databaseA=mf$databaseA
databaseB =mf$ databaseB
datA=mf$datA # matching variables
datB= mf$datB
#####
#record linkage
comp_mat = compare_binary (datA, datB, K)
linked = Matrix_Q(comp_mat,K,datA, datB)
Q=linked$Q
apply(Q,1,sum)
number=linked$number
naive_id = linked$naive_id
dif=linked$dif
#####naive
naive_data = generate_naive_data(naive_id,XB , surv_data)
Z = as.matrix(naive_data[,-c(1,2)])
Ts = data_true$Time
event = data_true$delta
lambda0 =  rep(0.1,length(event))
lambda0 [which(event == 0)] = 0
beta0 = rep(0.1,p)
# times of event
# death_times= Ts[which(event==1)]
# Theoretical estimating equation for true and naive data
fit_true = coxph(Surv(Time,delta)~.,data = data_true)
coef_true_s[i,] = as.vector(fit_true$coefficients)
# naive method
fit_naive = coxph_equa_naive(Ts,event, Z, maxiter = 20)
coef_naive_s[i,] = fit_naive$coef
converge_naive[i] = fit_naive$converge
# method with weighted average
fit_w_sum1 = coxph_w_sum1(Ts,event,XB, Q,maxiter = 20)
coef_w_sum1_s[i,] = fit_w_sum1$coef
converge_w_sum1[i] = fit_w_sum1$converge
#method with the maximum of proba
fit_w_sum2 = coxph_w_sum2(Ts,event,XB, Q, maxiter = 20)
coef_w_sum2_s[i,] = fit_w_sum2$coef
converge_w_sum2[i] = fit_w_sum2$converge
# EM method
fit_estimate = Func_itteration(beta0,lambda0,Ts,event,XB,Q,tol= 1e-6,maxits = 300)
coef_estimate_s[i,] = fit_estimate$beta0
it_EM = fit_estimate$it
}
return(list( coef_true_s1 = coef_true_s[,1], coef_true_s2 = coef_true_s[,2],coef_true_s3 = coef_true_s[,3],
coef_naive_s1 = coef_naive_s[,1], coef_naive_s2 = coef_naive_s[,2], coef_naive_s3 = coef_naive_s[,3], coef_w_sum1_s1 = coef_w_sum1_s[,1],
coef_w_sum1_s2 = coef_w_sum1_s[,2],coef_w_sum1_s3 = coef_w_sum1_s[,3], coef_w_sum2_s1 = coef_w_sum2_s[,1], coef_w_sum2_s2 = coef_w_sum2_s[,2],
coef_w_sum2_s3 = coef_w_sum2_s[,3], coef_estimate_s1 = coef_estimate_s[,1], coef_estimate_s2 = coef_estimate_s[,2],
coef_estimate_s3 = coef_estimate_s[,3],  converge_naive = converge_naive,
converge_w_sum1= converge_w_sum1,converge_w_sum2 = converge_w_sum2, converge_estimate = converge_estimate ))  }
######################################
setwd("C:/Users/fchezeut/Documents/GitHub/Cox-matched-data/code_size_varied")
for (i in (10:nrow(scenarios))){
nsim=scenarios[i,1]
nB= scenarios[i,2]
nA=scenarios[i,3]
K=scenarios[i,4]
prevalence = rep(prevalence_sample, K)
results_sample = estimates_survival(nsim,nA,nB,p,beta,K,prevalence) #monte carlos
filename = paste0("C:/Users/fchezeut/Documents/GitHub/Cox-matched-data/code_size_varied/Results/","nsim=",nsim,
"_nB=",nB,"_nA=",nA,"_K=",K,".Rdata")
save(results_sample,file = filename)
}
fixed
setwd("C:/Users/fchezeut/Documents/GitHub/Cox-matched-data/code_size_varied")
source("7_EM_scenarios.R")
#scenarios_boxplot=scenarios[scenarios$nB==2000,]
#scenarios_boxplot=scenarios[scenarios$nB==4000,]
scenarios_boxplot=scenarios[(scenarios$nB==6000)&
(scenarios$K!=18),]
scenarios_boxplot
setwd("C:/Users/fchezeut/Documents/GitHub/Cox-matched-data/code_size_varied")
#source("5_EM_scenarios.R")
source("7_EM_scenarios.R")
#scenarios_boxplot=scenarios[scenarios$K==9,]
scenarios_boxplot=scenarios[scenarios$K==18,]
scenarios_boxplot
varies = "nB"
fixed="K"
library(ggplot2)
library(gridExtra)
library(xtable)
boxplot_beta0 = NULL
# size fix
for (i in (1:nrow(scenarios_boxplot))){
nsim = scenarios_boxplot[i,1]
nB = scenarios_boxplot[i,2]
nA = scenarios_boxplot[i,3]
K= scenarios_boxplot[i,4]
load(paste0("C:/Users/fchezeut/Documents/GitHub/Cox-matched-data/code_size_varied/Results/",
"nsim=",nsim,"_nB=",nB,"_nA=",nA,"_K=",K,".Rdata"))
results_sample = results_sample
boxplot_beta0_true = cbind(rep(1,times=nsim),
rep(K,times=nsim),
rep(nB, times=nsim),
results_sample$coef_true_s1,
results_sample$coef_true_s2,
results_sample$coef_true_s3)
boxplot_beta0_naive = cbind(rep(2,times=nsim),
rep(K,times=nsim),
rep(nB, times=nsim),
results_sample$coef_naive_s1,
results_sample$coef_naive_s2,
results_sample$coef_naive_s3)
boxplot_beta0_w_sum1 = cbind(rep(3,times=nsim),
rep(K,times=nsim),
rep(nB,times=nsim),
results_sample$coef_w_sum1_s1,
results_sample$coef_w_sum1_s2,
results_sample$coef_w_sum1_s3)
boxplot_beta0_w_sum2 = cbind(rep(4,times=nsim),
rep(K,times=nsim),
rep(nB,times=nsim),
results_sample$coef_w_sum2_s1,
results_sample$coef_w_sum2_s2,
results_sample$coef_w_sum2_s3)
boxplot_beta0_estimate = cbind(rep(5,times=nsim),
rep(K,times=nsim),
rep(nB, times=nsim),
results_sample$coef_estimate_s1,
results_sample$coef_estimate_s2,
results_sample$coef_estimate_s3)
boxplot_beta0 = rbind(boxplot_beta0,boxplot_beta0_true,boxplot_beta0_naive,
boxplot_beta0_w_sum1,  boxplot_beta0_w_sum2,boxplot_beta0_estimate  )
}
titlename =paste ("K=", K)
colnames(boxplot_beta0) = c("Estimator",fixed, varies, "beta0.1","beta0.2","beta0.3")
boxplot_beta0 = data.frame(boxplot_beta0)
boxplot_beta0[,1] = factor(boxplot_beta0[,1],
levels = 1:5, labels = c("Theorical"," Naive", "weighted average", "2-max weighted average", "EM"))
boxplot_beta0[,2] = as.factor(boxplot_beta0[,2] )
boxplot_beta0[,3] = as.factor(boxplot_beta0[,3] )
boxplot_beta0[,4] = as.numeric(boxplot_beta0[,4] )
boxplot_beta0[,5] = as.numeric(boxplot_beta0[,5] )
boxplot_beta0[,6] = as.numeric(boxplot_beta0[,6] )
beta0_1 = ggplot(boxplot_beta0,aes(x=nA,y= beta0.1,fill=Estimator))+
geom_boxplot()+
xlab(varies)+
ylab(quote(hat(beta)[1]))+
geom_hline(yintercept=beta[1],lty=1,col="orange")+  ggtitle(titlename)
beta0_1
View(boxplot_beta0)
varies
beta0_1 = ggplot(boxplot_beta0,aes(x=nB,y= beta0.1,fill=Estimator))+
geom_boxplot()+
xlab(varies)+
ylab(quote(hat(beta)[1]))+
geom_hline(yintercept=beta[1],lty=1,col="orange")+  ggtitle(titlename)
beta0_1
beta0_2 = ggplot(boxplot_beta0,aes(x=nB,y= beta0.2,fill=Estimator))+
geom_boxplot()+
theme(legend.position = "none")+
xlab(varies)+
ylab(quote(hat(beta)[2]))+
geom_hline(yintercept=beta[2],lty=1,col="orange")+
ggtitle(titlename)
beta0_2
beta0_3 = ggplot(boxplot_beta0,aes(x=nB,y= beta0.3,fill=Estimator))+
geom_boxplot()+
theme(legend.position = "none")+
xlab(varies)+
ylab(quote(hat(beta)[3]))+
geom_hline(yintercept=beta[3],lty=1,col="orange")+
ggtitle(titlename)
beta0_3
setwd("C:/Users/fchezeut/Documents/GitHub/Cox-matched-data/code_size_varied")
source("7_EM_scenarios.R")
#scenarios_boxplot=scenarios[scenarios$nB==2000,]
#scenarios_boxplot=scenarios[scenarios$nB==4000,]
scenarios_boxplot=scenarios[(scenarios$nB==6000)&
(scenarios$K!=18),]
varies = "K"
fixed="nB"
library(ggplot2)
library(gridExtra)
library(xtable)
boxplot_beta0 = NULL
# size fix
for (i in (1:nrow(scenarios_boxplot))){
nsim = scenarios_boxplot[i,1]
nB = scenarios_boxplot[i,2]
nA = scenarios_boxplot[i,3]
K= scenarios_boxplot[i,4]
load(paste0("C:/Users/fchezeut/Documents/GitHub/Cox-matched-data/code_size_varied/Results/",
"nsim=",nsim,"_nB=",nB,"_nA=",nA,"_K=",K,".Rdata"))
results_sample = results_sample
boxplot_beta0_true = cbind(rep(1,times=nsim),
rep(K,times=nsim),
rep(nB, times=nsim),
results_sample$coef_true_s1,
results_sample$coef_true_s2,
results_sample$coef_true_s3)
boxplot_beta0_naive = cbind(rep(2,times=nsim),
rep(K,times=nsim),
rep(nB, times=nsim),
results_sample$coef_naive_s1,
results_sample$coef_naive_s2,
results_sample$coef_naive_s3)
boxplot_beta0_w_sum1 = cbind(rep(3,times=nsim),
rep(K,times=nsim),
rep(nB,times=nsim),
results_sample$coef_w_sum1_s1,
results_sample$coef_w_sum1_s2,
results_sample$coef_w_sum1_s3)
boxplot_beta0_w_sum2 = cbind(rep(4,times=nsim),
rep(K,times=nsim),
rep(nB,times=nsim),
results_sample$coef_w_sum2_s1,
results_sample$coef_w_sum2_s2,
results_sample$coef_w_sum2_s3)
boxplot_beta0_estimate = cbind(rep(5,times=nsim),
rep(K,times=nsim),
rep(nB, times=nsim),
results_sample$coef_estimate_s1,
results_sample$coef_estimate_s2,
results_sample$coef_estimate_s3)
boxplot_beta0 = rbind(boxplot_beta0,boxplot_beta0_true,boxplot_beta0_naive,
boxplot_beta0_w_sum1,  boxplot_beta0_w_sum2,boxplot_beta0_estimate  )
}
colnames(boxplot_beta0) = c("Estimator", varies, fixed,"beta0.1","beta0.2","beta0.3")
boxplot_beta0 = data.frame(boxplot_beta0)
boxplot_beta0[,1] = factor(boxplot_beta0[,1],
levels = 1:5, labels = c("Theorical"," Naive", "weighted average", "2-max weighted average", "EM"))
boxplot_beta0[,2] = as.factor(boxplot_beta0[,2] )
boxplot_beta0[,3] = as.factor(boxplot_beta0[,3] )
boxplot_beta0[,4] = as.numeric(boxplot_beta0[,4] )
boxplot_beta0[,5] = as.numeric(boxplot_beta0[,5] )
boxplot_beta0[,6] = as.numeric(boxplot_beta0[,6] )
scenarios_boxplot
#scenarios_boxplot=scenarios[scenarios$nB==2000,]
#scenarios_boxplot=scenarios[scenarios$nB==4000,]
scenarios_boxplot=scenarios[(scenarios$nB==4000),]
scenarios_boxplot
#scenarios_boxplot=scenarios[scenarios$nB==2000,]
#scenarios_boxplot=scenarios[scenarios$nB==4000,]
scenarios_boxplot=scenarios[(scenarios$nB==4000)&
(scenarios$K!=18),]
scenarios_boxplot
setwd("C:/Users/fchezeut/Documents/GitHub/Cox-matched-data/code_size_varied")
source("7_EM_scenarios.R")
#scenarios_boxplot=scenarios[scenarios$nB==2000,]
#scenarios_boxplot=scenarios[scenarios$nB==4000,]
scenarios_boxplot=scenarios[(scenarios$nB==4000)&
(scenarios$K!=18),]
varies = "K"
fixed="nB"
library(ggplot2)
library(gridExtra)
library(xtable)
boxplot_beta0 = NULL
# size fix
for (i in (1:nrow(scenarios_boxplot))){
nsim = scenarios_boxplot[i,1]
nB = scenarios_boxplot[i,2]
nA = scenarios_boxplot[i,3]
K= scenarios_boxplot[i,4]
load(paste0("C:/Users/fchezeut/Documents/GitHub/Cox-matched-data/code_size_varied/Results/",
"nsim=",nsim,"_nB=",nB,"_nA=",nA,"_K=",K,".Rdata"))
results_sample = results_sample
boxplot_beta0_true = cbind(rep(1,times=nsim),
rep(K,times=nsim),
rep(nB, times=nsim),
results_sample$coef_true_s1,
results_sample$coef_true_s2,
results_sample$coef_true_s3)
boxplot_beta0_naive = cbind(rep(2,times=nsim),
rep(K,times=nsim),
rep(nB, times=nsim),
results_sample$coef_naive_s1,
results_sample$coef_naive_s2,
results_sample$coef_naive_s3)
boxplot_beta0_w_sum1 = cbind(rep(3,times=nsim),
rep(K,times=nsim),
rep(nB,times=nsim),
results_sample$coef_w_sum1_s1,
results_sample$coef_w_sum1_s2,
results_sample$coef_w_sum1_s3)
boxplot_beta0_w_sum2 = cbind(rep(4,times=nsim),
rep(K,times=nsim),
rep(nB,times=nsim),
results_sample$coef_w_sum2_s1,
results_sample$coef_w_sum2_s2,
results_sample$coef_w_sum2_s3)
boxplot_beta0_estimate = cbind(rep(5,times=nsim),
rep(K,times=nsim),
rep(nB, times=nsim),
results_sample$coef_estimate_s1,
results_sample$coef_estimate_s2,
results_sample$coef_estimate_s3)
boxplot_beta0 = rbind(boxplot_beta0,boxplot_beta0_true,boxplot_beta0_naive,
boxplot_beta0_w_sum1,  boxplot_beta0_w_sum2,boxplot_beta0_estimate  )
}
colnames(boxplot_beta0) = c("Estimator", varies, fixed,"beta0.1","beta0.2","beta0.3")
boxplot_beta0 = data.frame(boxplot_beta0)
boxplot_beta0[,1] = factor(boxplot_beta0[,1],
levels = 1:5, labels = c("Theorical"," Naive", "weighted average", "2-max weighted average", "EM"))
boxplot_beta0[,2] = as.factor(boxplot_beta0[,2] )
boxplot_beta0[,3] = as.factor(boxplot_beta0[,3] )
boxplot_beta0[,4] = as.numeric(boxplot_beta0[,4] )
boxplot_beta0[,5] = as.numeric(boxplot_beta0[,5] )
boxplot_beta0[,6] = as.numeric(boxplot_beta0[,6] )
beta0_1 = ggplot(boxplot_beta0,aes(x=K,y= beta0.1,fill=Estimator))+
geom_boxplot()+
xlab(varies)+
ylab(quote(hat(beta)[1]))+
geom_hline(yintercept=beta[1],lty=1,col="orange")
beta0_1
beta0_2 = ggplot(boxplot_beta0,aes(x=K,y= beta0.2,fill=Estimator))+
geom_boxplot()+
theme(legend.position = "none")+
xlab(varies)+
ylab(quote(hat(beta)[2]))+
geom_hline(yintercept=beta[2],lty=1,col="orange")
beta0_2
beta0_3 = ggplot(boxplot_beta0,aes(x=K,y= beta0.3,fill=Estimator))+
geom_boxplot()+
theme(legend.position = "none")+
xlab(varies)+
ylab(quote(hat(beta)[3]))+
geom_hline(yintercept=beta[3],lty=1,col="orange")
beta0_3
